# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
on:
  pull_request:
    branches: [main]

name: pipeline

jobs:
  documentation-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run documentation in docker
        shell: bash
        run: make doc

      - name: git status
        shell: bash
        run: git diff --exit-code

  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: Test coverage
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE
          )
        shell: Rscript {0}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  unit-tests:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2

      - name: Run unit tests
        run: devtools::test()
        shell: Rscript {0}
  
  R-CMD-check:
    # only run full check on pull requests to main
    if: ${{ github.base_ref == 'main' }}
    runs-on: ${{ matrix.config.os }}

    name: CRAN-check ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,    r: 'release'}
          - {os: windows-latest,  r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      _R_CHECK_CRAN_INCOMING_: true

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      # tinytex required to build package vignette
      - uses: r-lib/actions/setup-tinytex@v2
      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          error-on: '"note"'